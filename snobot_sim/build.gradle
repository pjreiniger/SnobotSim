
apply plugin: 'cpp'
apply plugin: 'edu.wpi.first.NativeUtils'

repositories {
    mavenCentral()
}

ext {
    nativeName = "snobotSimCpp"
    baseArtifactId = "XXX"
    artifactGroupId = "YYY"
    wpi_deps = ["hal_shared", "wpiutil_shared", "snobot_sim_ctre_shared", "snobot_sim_rev_shared"]
    include_snobot_sim_cpp = []
    generatedSources = "$buildDir/generated/cpp"
}

apply from: "${rootDir}/common/base_jni_script.gradle"

apply from: "${rootDir}/common/create_version_file.gradle"
createCppVersion("SnobotSim", "SnobotSim", "SnobotSimHalVersion", getVersionName())


dependencies {

    compile 'edu.wpi.first.ntcore:ntcore-java:' + getNtCoreVersion()
    compile 'edu.wpi.first.cscore:cscore-java:' + getCsCoreVersion()
    compile 'edu.wpi.first.cameraserver:cameraserver-java:' + allwpilibVersion()
    compile project(":snobot_sim_utilities")
    compile 'com.snobot.simulator:ctre_sim_override:' + getCtreSimVersion()
    compile 'com.snobot.simulator:rev_simulator:' + getRevRoboticsSimVersion()


    testCompile 'edu.wpi.first.wpilibj:wpilibj-java:' + allwpilibVersion()
    testCompile 'edu.wpi.first.hal:hal-java:' + allwpilibVersion()
    testCompile "com.ctre.phoenix:api-java:" + getCtreVersion()
    testCompile "com.ctre.phoenix:wpiapi-java:" + getCtreVersion()
    testCompile "com.kauailabs.navx.frc:navx-java:" + getNavxVersion()
    testCompile "com.revrobotics.frc:SparkMax-java:" + getRevRoboticsVersion()

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.5.1'

    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.5.1'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.5.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    testRuntime 'edu.wpi.first.hal:hal-jni:' + allwpilibVersion() + ':' + getCurrentOsArch()
    testRuntime 'edu.wpi.first.wpiutil:wpiutil-java:' + getWpiUtilVersion()
    testRuntime 'edu.wpi.first.ntcore:ntcore-jni:' + getNtCoreVersion() + ':' + getCurrentOsArch()
    testRuntime 'edu.wpi.first.cscore:cscore-jni:' + getCsCoreVersion() + ':' + getCurrentOsArch()
    testRuntime 'edu.wpi.first.thirdparty.frc2020.opencv:opencv-java:' + getWpilibOpencvVersion()
    testRuntime 'edu.wpi.first.thirdparty.frc2020.opencv:opencv-jni:' + getWpilibOpencvVersion() + ':' + getCurrentOsArch()
}

nativeUtils {

  dependencyConfigs {
    snobot_sim_ctre {
      groupId = "com.snobot.simulator"
      artifactId = "ctre_sim_override"
      headerClassifier = 'headers'
      ext = "zip"
      version = getCtreSimVersion()
      sharedPlatforms << nativeUtils.wpi.platforms.windowsx64
      sharedPlatforms << nativeUtils.wpi.platforms.windowsx86
      sharedPlatforms << nativeUtils.wpi.platforms.osxx64
      sharedPlatforms << nativeUtils.wpi.platforms.linuxx64
    }
    snobot_sim_rev {
      groupId = "com.snobot.simulator"
      artifactId = "rev_simulator"
      headerClassifier = 'headers'
      ext = "zip"
      version = getRevRoboticsSimVersion()
      sharedPlatforms << nativeUtils.wpi.platforms.windowsx64
      sharedPlatforms << nativeUtils.wpi.platforms.windowsx86
      sharedPlatforms << nativeUtils.wpi.platforms.osxx64
      sharedPlatforms << nativeUtils.wpi.platforms.linuxx64
    }
  }
}

nativeUtils.exportsConfigs {
    snobotSimCpp {
        x86ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                            '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                            '_TI5?AVfailure', '_CT??_R0?AVout_of_range', '_CTA3?AVout_of_range',
                            '_TI3?AVout_of_range', '_CT??_R0?AVbad_cast']
        x64ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                            '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                            '_TI5?AVfailure', '_CT??_R0?AVout_of_range', '_CTA3?AVout_of_range',
                            '_TI3?AVout_of_range', '_CT??_R0?AVbad_cast']
    }
    snobotSimCppBase {
        x86ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                            '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                            '_TI5?AVfailure', '_CT??_R0?AVout_of_range', '_CTA3?AVout_of_range',
                            '_TI3?AVout_of_range', '_CT??_R0?AVbad_cast']
        x64ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                            '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                            '_TI5?AVfailure', '_CT??_R0?AVout_of_range', '_CTA3?AVout_of_range',
                            '_TI3?AVout_of_range', '_CT??_R0?AVbad_cast']
    }
    snobotSimCppJNI {
    }
}
