

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url getWpiRepo()
    }
}

configurations {
    wpilibNativeDeps
}

dependencies {
    wpilibNativeDeps 'edu.wpi.first.wpiutil:wpiutil-cpp:' + allwpilibVersion() + ':all@zip'
    wpilibNativeDeps 'edu.wpi.first.hal:hal-cpp:' + allwpilibVersion() + ':all@zip'
    wpilibNativeDeps 'edu.wpi.first.halsim:halsim_adx_gyro_accelerometer:' + allwpilibVersion() + ':all@zip'
    wpilibNativeDeps 'edu.wpi.first.thirdparty.frc2018:uvw:1.8.1-1.20.3:all@zip'
}

task extractWpilibNativeDeps(type: Copy) {
    def os_name = org.gradle.internal.os.OperatingSystem.current().getFamilyName();

    destinationDir = file("$rootDir/build/extracted_deps")
    configurations.wpilibNativeDeps.each {
        from(zipTree(it)) {
            exclude "**/athena/**"
            include "**/*.dll"
            include "**/*.so"
            include "**/*.dylib"
        }
    }
}


task captureWpiLibraries(type: Jar, dependsOn: extractWpilibNativeDeps) {

    baseName = "native_wpilib"
    destinationDir = file("$rootDir/build/wpi_libraries")
    classifier = "all";

    from(extractWpilibNativeDeps.destinationDir)
    includeEmptyDirs = false

    eachFile {

        if(it.getRelativePath().toString().contains("athena")) {
            it.exclude()
        }

        it.setPath(it.getRelativePath().toString().replace("shared", ""))
    }
}
