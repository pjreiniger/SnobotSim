apply plugin: 'maven-publish'
apply plugin: 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin'


if (!hasProperty('releaseType')) {
    WPILibVersion {
        releaseType = 'dev'
    }
}

def pubVersion = ''
if (project.hasProperty("publishVersion")) {
    pubVersion = project.publishVersion
} else {
    pubVersion = WPILibVersion.version
}

def outputsFolder = file("$project.buildDir/outputs")

def baseArtifactId = libraryName
def artifactGroupId = "edu.wpi.first.${libraryName}"
def zipBaseName = "_GROUP_edu_wpi_first_${libraryName}_ID_${libraryName}-cpp_CLS"
def jniBaseName = "_GROUP_edu_wpi_first_${libraryName}_ID_${libraryName}-jni_CLS"

task cppHeadersZip(type: Zip) {
    destinationDir = outputsFolder
    baseName = zipBaseName
    classifier = "headers"

    from(project.libraryHeaderDirs) {
        into '/'
    }
}

task cppSourcesZip(type: Zip) {
    destinationDir = outputsFolder
    baseName = zipBaseName
    classifier = "sources"
    
    println project.librarySrcDirs

    from(project.librarySrcDirs) {
        into '/'
    }
}


model {
    publishing {
        repositories {
           maven {
               url maven_publishing_path
           }
        }
        publications {
            cpp(MavenPublication) {
                artifactId = project.baseArtifactId
                groupId project.artifactGroupId
                version maven_version

                artifact cppHeadersZip
                artifact cppSourcesZip
                artifact project."packageNative${libraryName}FilesInJar"
            }
        }
    }
}
