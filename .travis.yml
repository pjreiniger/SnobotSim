language: java

matrix:
  include:
  - os: linux
    sudo: required
    dist: xenial
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-6

  - os: osx
    osx_image: xcode8

notifications:
  email: false

before_install:
  - |
         if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            ./.travis_setup_linux.sh;
         else
            mkdir build
            wget "https://download.java.net/java/ga/jdk11/openjdk-11_osx-x64_bin.tar.gz" -O "build/jdk.tar.gz"
            sudo tar xvzf build/jdk.tar.gz -C /Library/Java/JavaVirtualMachines/
            export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/
         fi;

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

# Don't want to run gradlew assemble
install:
- true

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

script:
  - |
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
           python3.5 -m wpiformat -clang 6.0;
           git --no-pager diff --exit-code HEAD  # Ensure formatter made no changes
        fi;
  - |
        ./gradlew build -x :snobot_sim_gui:test -x :snobot_sim_jni:test --refresh-dependencies
        # Clone the hacky repo, publish into it
        git clone --depth=50 --branch=master https://github.com/pjreiniger/maven_repo.git ../../pjreiniger/maven_repo
        ./gradlew publishToMavenLocal -PciBuild
        cp -rf ~/.m2/repository/com/snobot ../../pjreiniger/maven_repo/com

#deploy:
#  - provider: script
#    script: pwd; cd ../../pjreiniger/maven_repo; pwd; ls; chmod +x commit_updates.sh; ./commit_updates.sh
#    skip_cleanup: true
#    on:
#      branch: master
#  - provider: script
#    script: pwd; cd ../../pjreiniger/maven_repo; pwd; ls; chmod +x commit_updates.sh; ./commit_updates.sh
#    skip_cleanup: true
#    on:
#      branch: 2019-beta-0.0.1-RC

env:
  global:
    secure: J81JK5zokRdrB8TfUC/sF0kXzrlAO7C2GN0nEOGJK22FMm0LlT/ECd1GrCjRWc/eHDQAXZVNliBVr9l5lXmt3iOxwAeBK/kMI/pxL5VMz7WelRBM8ibPtW5Tuj5JRpviCYygXVl8maOFVACWCovsZoJFot7DVEn+l20WfItmuZ0lyUmRT4+aS4OumxYO/LMS21Okw6xPYqixmb2MAetfmsDN13M2SUQY6KWbxUrrL3HyADSMLtI7ojquetAt0SBXBAnQ1VgLMvBw9Km4K2iKnKMUnEvadLGFFZu8Z2Q7bbDZyvKuU3KXeyzWFkskOmmw4cBw3egzfLXas+W4eJ9wOUnYrF5zI3VDP4tamDpLJEBalg36+dAy2eccQxbF5/4GRk4S5aLc0ZIkrVwWm+qc1Tht8oNCsesrVM5geQZRu3tUJgHECQu6Gc8ubCOVN8pAAVVZki5q1VHiLm08huAlVmnc7L549k1Y3Gj/qPc54enySSK0qAeCwult0cEO0w6KjahLGh+xqX08iWr/KXeZezM7HKcEMljnssCvp94VP7dhwjaskwd4Xw8e4n5yl2cLEGc+8MnvAeQXg9gnz1mn2fiBhAdMeTlnXgb6BrqiQ3toPTxOvOpzalBGL+93EPczlu2S1oNMEvxEFy9ATH236suuHQcEvbm9jebqPrbhi4k=
