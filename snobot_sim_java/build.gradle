import edu.wpi.first.nativeutils.NativeUtils
import org.gradle.api.file.FileCollection


evaluationDependsOn(':snobot_sim_utilities')
evaluationDependsOn(':sim_adx_family')
evaluationDependsOn(':sim_extension_navx')

ext {
    baseId = "snobot_sim_java"
}

apply from: "${rootDir}/common/base_java_script.gradle"

sourceSets.main.java.srcDir "${buildDir}/generated/java/"
apply from: "${rootDir}/common/create_version_file.gradle"
createJavaVersion("com/snobot/simulator/wrapper_accessors/java", "JaveSimulatorVersion", "com.snobot.simulator.wrapper_accessors.java", getVersionName())

configurations.maybeCreate("wpilibNativeDeps")
dependencies {
    compile 'edu.wpi.first.ntcore:ntcore-java:' + getNtCoreVersion()
    compile 'edu.wpi.first.cscore:cscore-java:' + getCsCoreVersion()
    compile 'edu.wpi.first.cameraserver:cameraserver-java:' + allwpilibVersion()
    compile 'edu.wpi.first.hal:hal-java:' + allwpilibVersion()
    compile 'edu.wpi.first.wpilibj:wpilibj-java:' + allwpilibVersion()
    compile 'org.apache.logging.log4j:log4j-api:2.12.0'
    compile 'org.apache.logging.log4j:log4j-core:2.12.0'
    compile 'org.yaml:snakeyaml:1.25'
    compile project(":snobot_sim_utilities")
    compile project(':sim_adx_family')
    compile project(':sim_extension_navx')
    compile 'com.snobot.simulator:ctre_sim_override:' + getCtreSimVersion()
    compile 'com.snobot.simulator:rev_simulator:' + getRevRoboticsSimVersion()
    testRuntime 'com.snobot.simulator:ctre_sim_override:' + getCtreSimVersion() + ':all'
    testRuntime 'com.snobot.simulator:rev_simulator:' + getRevRoboticsSimVersion() + ':all'
    
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.5.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.5.1'
    testRuntime 'edu.wpi.first.wpiutil:wpiutil-java:' + getWpiUtilVersion()
    testRuntime 'edu.wpi.first.ntcore:ntcore-jni:' + getNtCoreVersion() + ':all'
    testRuntime 'edu.wpi.first.cscore:cscore-jni:' + getCsCoreVersion() + ':all'
    testRuntime 'org.opencv:opencv-java:' + getWpilibOpencvVersion()
    testRuntime 'org.opencv:opencv-jni:' + getWpilibOpencvVersion() + ':all'
    
    testCompile "com.ctre.phoenix:api-java:" + getCtreVersion()
    testCompile "com.ctre.phoenix:wpiapi-java:" + getCtreVersion()
    testCompile "com.kauailabs.navx.frc:navx-java:" + getNavxVersion()
    testCompile "com.revrobotics.frc:SparkMax-java:" + getRevRoboticsVersion()
    
    wpilibNativeDeps project(':sim_extension_navx').packageNativeFiles.outputs.files
    wpilibNativeDeps project(':sim_adx_family').packageNativeFiles.outputs.files
}

apply from: "${rootDir}/common/extract_native_libraries.gradle"
test.dependsOn extract_wpilib
