# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

jobs:
 - job: Styleguide
   pool:
     vmImage: 'Ubuntu 16.04'

   steps:
      - script: |
          sudo apt-get update -y
          sudo apt-get install clang-format-5.0 python3-setuptools -y
          sudo pip3 install --upgrade pip
          sudo pip3 install wpiformat
          git checkout -b master
        displayName: 'Install Dependencies'
      - script: |
          wpiformat -y 2018 -clang 5.0
        displayName: 'Run WPIFormat'
        failOnStderr: true
      - script: |
          git --no-pager diff --exit-code HEAD  # Ensure formatter made no changes
        displayName: 'Check WPIFormat Output'
        failOnStderr: true
#
# - job: Linux
#   pool:
#     vmImage: 'Ubuntu 16.04'
#
#   steps:
#   - task: Gradle@2
#     inputs:
#       workingDirectory: ''
#       gradleWrapperFile: 'gradlew'
#       gradleOptions: '-Xmx3072m'
#       javaHomeOption: 'JDKVersion'
#       jdkVersionOption: '1.11'
#       jdkArchitectureOption: 'x64'
#       publishJUnitResults: true
#       testResultsFiles: '**/TEST-*.xml'
#       tasks: 'build'
#       options: '-PciBuild'
 - job: Windows_64_Bit
   pool:
     vmImage: 'vs2017-win2016'
   steps:
    - powershell: |
        mkdir build
        $ProgressPreference = 'SilentlyContinue'
        wget "https://download.java.net/java/ga/jdk11/openjdk-11_windows-x64_bin.zip" -O "build\jdk.zip"
      displayName: 'Download JDK'
    - task: JavaToolInstaller@0
      inputs:
        jdkSourceOption: localDirectory
        jdkFile: 'build/jdk.zip'
        jdkDestinationDirectory: 'build/jdkinst'
        jdkArchitectureOption: x64
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
        options: '-PciBuild'

 - job: Windows_32_Bit
   pool:
     vmImage: 'vs2017-win2016'
   steps:
    - powershell: |
        mkdir build
        $ProgressPreference = 'SilentlyContinue'
        wget "https://github.com/wpilibsuite/frc-openjdk-windows/releases/download/v11.0.0u28-1/jdk-x86-11.0.0u28-1.zip" -O "build\jdk.zip"
      displayName: 'Download JDK'
    - task: JavaToolInstaller@0
      inputs:
        jdkSourceOption: localDirectory
        jdkFile: 'build/jdk.zip'
        jdkDestinationDirectory: 'build/jdkinst'
        jdkArchitectureOption: x86
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx1024m'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
        options: '-PciBuild'

 - job: Mac
   pool:
     vmImage: 'xcode9-macos10.13'
   steps:
    - script: |
        mkdir build
        wget "https://download.java.net/java/ga/jdk11/openjdk-11_osx-x64_bin.tar.gz" -O "build/jdk.tar.gz"
        sudo tar xvzf build/jdk.tar.gz -C /Library/Java/JavaVirtualMachines/
        export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/
      displayName: 'Setup JDK'
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'path'
        jdkDirectory: '/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
        options: '-PciBuild'
