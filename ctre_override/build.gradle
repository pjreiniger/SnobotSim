import edu.wpi.first.nativeutils.NativeUtils
import org.gradle.api.file.FileCollection

ext
{
    ctreHeaders = "${projectDir}/temp/driver/include"
    
    // Things for the base script
    libraryName = "CtreSimulation"
    getNativeVersion = { binary -> NativeUtils.getPlatformPath(binary) }
    jniClasses = ['com.snobot.simulator.ctre.CtreJni']
    
    libraryBaseName = 'CTRE_PhoenixCCI'
    librarySrcDirs = [ "src/main/native/cpp"]
    libraryHeaderDirs = [ "src/main/native/include/CtreSimMocks", 
                          ctreHeaders, 
                          ctreHeaders + "/ctre/phoenix/jni",
                          "${rootDir}/snobot_sim_gui/src/arm-linux-jni",
                          "${rootDir}/snobot_sim_gui/src/arm-linux-jni/linux", ]
                          
    baseId = "ctre_override"
    baseArtifactId = 'ctre_override'
    artifactGroupId = 'com.snobot.simulator'
}


apply from: "${rootDir}/common/base_jni_script.gradle"

build.dependsOn "packageNative${libraryName}FilesInJar"

model {
    exportsConfigs {
        CtreSimulation(ExportsConfig) {
            x86SymbolFilter = { symbols->
                def retList = []
                return retList
            }
            x64SymbolFilter = { symbols->
                def retList = []
                return retList
            }
        }
    }
    dependencyConfigs {
        wpiutil(DependencyConfig) {
            groupId = 'edu.wpi.first.wpiutil'
            artifactId = 'wpiutil-cpp'
            headerClassifier = 'headers'
            ext = 'zip'
            version = '+'
            sharedConfigs = [ CtreSimulation: [] ]
        }
    }

}

//apply from: 'publish.gradle'
