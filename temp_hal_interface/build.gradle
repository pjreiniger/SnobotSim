import edu.wpi.first.nativeutils.NativeUtils
import org.gradle.api.file.FileCollection
import org.gradle.internal.os.OperatingSystem

ext 
{
    // Things for the base script
    libraryName = "temp_hal_interface_jni"
    getNativeVersion = { binary -> NativeUtils.getPlatformPath(binary) }
    
    jniClasses = [
        "edu.wpi.first.hal.sim.mockdata.AnalogGyroDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.AnalogInDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.AnalogOutDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.DIODataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.DriverStationDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.EncoderDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.I2CDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.PCMDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.PWMDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.RelayDataJNI.java",
        "edu.wpi.first.hal.sim.mockdata.SimulatorJNI.java",
        "edu.wpi.first.hal.sim.mockdata.SPIDataJNI.java",
        ]
    
    libraryBaseName = 'temp_hal_interface_jni'
    librarySrcDirs = [ 'src/main/native/cpp']
    libraryHeaderDirs = [ "src/main/native/include", ]
        
    baseId = "temp_hal_interface"
    baseArtifactId = 'temp_hal_interface'
    artifactGroupId = 'com.snobot.simulator'
}

apply from: "${rootDir}/common/base_jni_script.gradle"

model {
    dependencyConfigs {
        wpiutil(DependencyConfig) {
            groupId = 'edu.wpi.first.wpiutil'
            artifactId = 'wpiutil-cpp'
            headerClassifier = 'headers'
            ext = 'zip'
            version = getWpiUtilVersion()
            sharedConfigs = [ temp_hal_interface_jni: [] ]
        }
        halsim(DependencyConfig) {
            groupId = 'edu.wpi.first.hal'
            artifactId = 'hal'
            headerClassifier = 'headers'
            ext = 'zip'
            version = allwpilibVersion()
            sharedConfigs = [ temp_hal_interface_jni: [] ]
        }
    }
}

dependencies {
    
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.2.0'
    
    testCompile project(":snobot_sim_utilities")
    //testRuntime captureWpiLibraries.outputs.files
    testRuntime project(':temp_hal_interface').packageNativeFiles.outputs.files
    
    
    //testCompile 'edu.wpi.first.hal:hal-java:' + allwpilibVersion()
    compile 'edu.wpi.first.wpilibj:wpilibj-java:' + allwpilibVersion()
    testRuntime 'edu.wpi.first.ntcore:ntcore-java:' + getNtCoreVersion()
    testRuntime 'edu.wpi.first.cscore:cscore-java:' + getCsCoreVersion()
    testRuntime 'edu.wpi.first.ntcore:ntcore-jni:' + getNtCoreVersion() + ':all'
    testRuntime 'edu.wpi.first.cscore:cscore-jni:' + getCsCoreVersion() + ':all'
    
}

