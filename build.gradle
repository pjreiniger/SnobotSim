

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://raw.githubusercontent.com/pjreiniger/maven_repo/master/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.edu.wpi.first:native-utils:1.2.12'
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+'
    }
}

plugins {
    id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '1.6'
}
apply plugin: 'nebula-aggregate-javadocs'

task clean(type: Delete) {
    delete buildDir
}

ext.build_simulator_cpp = false
ext.build_simulator_java = true

/////////////////////////////////////////
// Specify WPI Versions

ext.allwpilibVersion = {
    return '2018.4.1'
}

ext.getHalHeadersVersion = {
    return allwpilibVersion()
}
ext.getWpilibjVersion = {
    return allwpilibVersion()
}
ext.getWpilibcVersion = {
    return allwpilibVersion()
}
ext.getWpiUtilVersion = {
    return '3.2.0'
}
ext.getNtCoreVersion = {
    return '4.1.0'
}
ext.getCsCoreVersion = {
    return '1.3.0'
}
ext.getWpilibOpencvVersion = {
    return '3.2.0'
}
ext.getCtreVersion = {
    return '5.2.2.0'
}
ext.getNavxVersion = {
    return '3.0.346'
}

ext.getJaci3rdPartyMirror = {
    return 'https://raw.githubusercontent.com/Open-RIO/Maven-Mirror/master/m2'
}

/////////////////////////////////////////

// Publshing Information

ext.maven_publishing_path = 'build/maven_repo/'
if(hasProperty('maven_repo'))
{
    ext.maven_publishing_path = maven_repo
}
ext.maven_publishing_path = new File(maven_publishing_path).getAbsolutePath()
println "Publishing maven to " + ext.maven_publishing_path.toString()

ext.maven_version = "0.11.0"
if(hasProperty('maven_version'))
{
    ext.maven_version = maven_version
}

apply from: 'publish.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

apply from: "$rootDir/combine_libraries.gradle"

